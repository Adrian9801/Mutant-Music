public MC(pZoneA: number[][], pZoneB: number[][]) {

        this.auxPZoneA = pZoneA;
        this.auxPZoneB = pZoneB;

        var lenZoneOne: number;
        var lenZoneTwo: number;

        var lenSubZoneOne: number;
        var lenSubZoneTwo: number;

        var randomA: number;
        var randomB: number;
        var subRandomA: number;
        var subRandomB: number;

        var areaSong: number;
        var resp: number[][];
        var postA: number;
        var auxArea: number = 0;

        resp = [];
        lenZoneOne = this.auxPZoneA.length - 1;
        lenZoneTwo = this.auxPZoneB.length - 1;


        for (var i = 0; i < 4000; i++) {
            // random de entre los conjuntos de la zona 1 y 2//
            randomA = (Math.floor(Math.random() * (lenZoneOne - 0 + 1)) + 0);
            randomB = (Math.floor(Math.random() * (lenZoneTwo - 0 + 1)) + 0);

            //randon dentro del conjunto seleccionado//
            lenSubZoneOne = ((Math.round((this.auxPZoneA[randomA].length) / 2)));
            lenSubZoneTwo = ((Math.round((this.auxPZoneB[randomB].length) / 2)));

            subRandomA = ((Math.floor(Math.random() * (lenSubZoneOne - 1 + 1)) + 1) * 2) - 1;//aseguramos num par
            subRandomB = ((Math.floor(Math.random() * (lenSubZoneTwo - 1 + 1)) + 1) * 2) - 1;//aseguramos num par

            // console.log (! (this.isRepit((this.auxPZoneA[randomA][subRandomA]))));
            // console.log (this.auxPZoneA[randomA][subRandomA]);

            if( (! (this.isRepit((this.auxPZoneA[randomA][subRandomA]))))){
                
            if (

                //  ((this.auxPZoneA[randomA][subRandomA]) !== (-1)) && // que no sea un par ya seleccionado
                //  ((this.auxPZoneB[randomB][subRandomB]) !== (-1)) && // que no sea un par ya seleccionado
                (
                (((this.auxPZoneB[randomB][subRandomB]) - (this.auxPZoneA[randomA][subRandomA])) == this.lastSeconS2)//que cumpla los n segundos requeridos
            )) {


                areaSong = claseArea.waveArea(this.auxPZoneA[randomA][subRandomA], this.auxPZoneB[randomB][subRandomB],
                    this.auxPZoneA[randomA][subRandomA - 1], this.auxPZoneB[randomB][subRandomB - 1]);//calculo del area total

                if ((this.totalAreasS2[0] / 100) * 70 <= areaSong) {//si el area total cumple con 70% 

                    postA = this.auxPZoneA[randomA][subRandomA];// posicion en la  cancion 

                    for (var i = 1; i <= this.zonesAreaS2.length; i++) { // analisis de las sub areas
                        //tiempo de inicio , tiempo final , punto de inicio punto final, caluclo de cada sub area
                        auxArea = claseArea.waveArea(this.auxPZoneA[randomA][subRandomA] + i - 1//segundo
                            , this.auxPZoneA[randomA][subRandomA] + i,//segundo
                            this.audioData.channelData[0][postA + ((44100) * (i))],//punto
                            this.audioData.channelData[0][postA + ((44100) * (i + 1))]);//punto

                        ////++
                        if (
                            // (this.zonesAreaS2[i - 1] / 100) * 75 <= auxArea
                            // &&
                            (this.gps(this.audioData.channelData[0][postA + ((44100) * (i))]) == this.zonesPointsS2[i - 1])//cumplen con el adn
                            &&
                            (this.gps(this.audioData.channelData[0][postA + ((44100) * (i + 1))]) == this.zonesPointsS2[i])//cumplen con el adn
                        ) {
                            this.zonesAreaSong.push(auxArea);

                        } else {
                            this.zonesAreaSong = [];
                            break;
                        }

                    }//for de cada sub area 
                    if (this.zonesAreaSong.length == this.zonesAreaS2.length) {
                        // pZoneA[randomA][subRandomA] = -1;
                        // pZoneB[randomB][subRandomB] = -1;
                        console.log("///////////////////////////");
                        console.log((this.totalAreasS2[0] / 100) * 70 + "70%");
                        console.log((this.totalAreasS2[0]) + "org")
                        console.log(this.lastSeconS2);
                        console.log(this.auxPZoneA[randomA][subRandomA]);
                        console.log(this.auxPZoneB[randomB][subRandomB]);
                        console.log(this.auxPZoneA[randomA][subRandomA] * 44100);
                        console.log(this.auxPZoneB[randomB][subRandomB] * 44100);
                        console.log("///////////////////////////");
                        resp.push(this.zonesAreaSong);
                        console.log(this.auxPZoneA[randomA][subRandomA]+ " rep");
                        this.reptit.push(this.auxPZoneA[randomA][subRandomA]);
                        this.zonesAreaSong = [];
                    }

                }//si el area total cumple con 70% 

            }// if de -1 y segundos
        }

        }//termina el for

        // console.log((this.zonesAreaS2));
        // console.log((resp));
    }

    public getZone(zone: number): (number[][]) {
        switch (zone) {
            case 1: {
                return this.zone1;
            }
            case 2: {
                return this.zone2;
            }
            case 3: {
                return this.zone3;
            }
            case 4: {
                return this.zone4;
            }
            case 5: {
                return this.zone5;
            }
            case 6: {
                return this.zone6;
            }
            case 7: {
                return this.zone7;
            }
            case 8: {
                return this.zone8;
            }
        }
        return this.dumppi;
    }
